name: Codacy CI

on:
  push:
    branches:
      - main
      - develop
  workflow_call:
    secrets:
      DJANGO_ALLOWED_HOST:
        required: true
      DJANGO_DEBUG:
        required: true
      DJANGO_SECRET_KEY:
        required: true
      FRONTEND_URL:
        required: true
      STRIPE_SECRET_KEY:
        required: true
      VITE_BACKEND_API_URL:
        required: true
      VITE_STRIPE_PUBLIC_KEY:
        required: true

      VERIFICATION_KEY:
        required: true


jobs:
  build:
    runs-on: ubuntu-latest
    env:  
      DJANGO_ALLOWED_HOST: ${{ secrets.DJANGO_ALLOWED_HOST }}
      DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      VITE_BACKEND_API_URL: ${{ secrets.VITE_BACKEND_API_URL }}
      VITE_STRIPE_PUBLIC_KEY: ${{ secrets.VITE_STRIPE_PUBLIC_KEY }}

      VERIFICATION_KEY: ${{ secrets.VERIFICATION_KEY }}

      
    steps:
    - name: Checkout del codigo fuente
      uses: actions/checkout@v2

    - name: Configura Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.11.1'

    - name: Instala dependencias de Node.js
      run: |
        cd frontend
        npm install

    - name: Construye el frontend
      run: |
        cd frontend
        npm run build

    - name: Configura Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.2'

    - name: Instala dependencias de Python
      run: |
        cd backend
        pip install -r requirements.txt
      
    - name: Ejecuta los tests de Python
      run: |
        cd backend
        coverage run --branch --source=. ./manage.py test  --keepdb 
        coverage xml

    - name: Sube reporte de cobertura a Codacy
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: backend/coverage.xml
